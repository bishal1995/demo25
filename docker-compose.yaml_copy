version: '3.8'

services:
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123"  # HTTP Interface
      - "9000:9000"  # Native Interface
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    environment:
      - CLICKHOUSE_USER=admin
      - CLICKHOUSE_PASSWORD=password
    volumes:
      - ./clickhouse_data:/var/lib/clickhouse
      - ./clickhouse_init:/docker-entrypoint-initdb.d
    networks:
      - spark-net

  tabix:
    image: spoonest/clickhouse-tabix-web-client:latest
    container_name: tabix
    ports:
      - "8081:80"  # Tabix UI on http://localhost:8081
    depends_on:
      - clickhouse
    networks:
      - spark-net

  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
    volumes:
      - ./jars:/opt/spark/jars
    ports:
      - "8080:8080"
      - "7077:7077"
    networks:
      - spark-net

  spark-worker-1:
    image: bitnami/spark:latest
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    volumes:
      - ./jars:/opt/spark/jars
    depends_on:
      - spark-master
    networks:
      - spark-net

  spark-worker-2:
    image: bitnami/spark:latest
    container_name: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    volumes:
      - ./jars:/opt/spark/jars
    depends_on:
      - spark-master
    networks:
      - spark-net

  jupyter:
    image: jupyter/pyspark-notebook:latest
    container_name: jupyter
    ports:
      - "8888:8888"
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - NB_UID=1000
      - CHOWN_HOME=yes
      - CHOWN_HOME_OPTS=-R
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./jars:/home/jovyan/jars  # Mount folder with JDBC drivers
    depends_on:
      - spark-master
    networks:
      - spark-net

  rill_dash:
    build:
      context: .
      dockerfile: Dockerfile_rill
    ports:
      - 8088:9009
    volumes:
      - ./rill_data:/home/ubuntu/rill_project
    networks:
      - spark-net
    depends_on:
      - clickhouse

  postgres:
    image: postgres:15
    container_name: airflow_postgres
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - spark-net

  redis:
    image: redis:latest
    container_name: airflow_redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - spark-net

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile_airflow_worker
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
    ports:
      - "8082:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
    command: webserver
    networks:
      - spark-net

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile_airflow_worker
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
    command: scheduler
    networks:
      - spark-net

  airflow-worker:
    build:
      context: .
      dockerfile: Dockerfile_airflow_worker
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
    command: celery worker
    networks:
      - spark-net

volumes:
  clickhouse_data:
  airflow_logs:
  postgres_data:

networks:
  spark-net:
    driver: bridge

